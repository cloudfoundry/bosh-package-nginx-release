---
jobs:
- name: bump-versions
  plan:
    - in_parallel:
      - get: nginx-release
      - get: bosh-cli-registry-image
      - get: nginx-src
        trigger: true
    - task: bump-versions
      file: nginx-release/ci/tasks/bump-versions.yml
      image: bosh-cli-registry-image
      params:
        PRIVATE_YML: |
          ---
          blobstore:
            options:
              access_key_id: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.username))
              secret_access_key: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.password))
              assume_role_arn: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.role_arn))
    - put: nginx-release
      params:
        repository: nginx-release

- name: test
  plan:
  - in_parallel:
    - get: nginx-release
      passed: [bump-versions]
      trigger: true
    - get: stemcell
      resource: jammy-stemcell
    - get: warden-cpi-registry-image
  - task: test
    privileged: true
    file: nginx-release/ci/tasks/test.yml
    image: warden-cpi-registry-image

- name: create-final-release
  plan:
  - in_parallel:
    - get: bosh-cli-registry-image
    - get: nginx-release
      passed: [test]
      trigger: true
  - task: build
    privileged: true
    file: nginx-release/ci/tasks/build.yml
    image: bosh-cli-registry-image
    params:
      PRIVATE_YML: |
        ---
        blobstore:
          options:
            access_key_id: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.username))
            secret_access_key: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.password))
            assume_role_arn: ((bosh-packages-nginx-release-uploader_assume_aws_access_key.role_arn))
  - put: nginx-release
    params:
      repository: nginx-release

resources:
- name: nginx-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-package-nginx-release
    branch: main
    private_key: ((github_deploy_key_nginx-release.private_key))

- name: nginx-src
  type: http-resource
  source:
    index: "https://nginx.org/download/"
    regex: 'href="nginx-(?P<version>1[0-9.]+)\.tar\.gz"'
    uri: "https://nginx.org/download/nginx-{version}.tar.gz"

- name: bosh-cli-registry-image
  type: registry-image
  source:
    repository: bosh/cli
    username: ((docker.username))
    password: ((docker.password))

- name: warden-cpi-registry-image
  type: registry-image
  source:
    repository: bosh/warden-cpi
    username: ((docker.username))
    password: ((docker.password))

- name: jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-jammy-go_agent

resource_types:
- name: http-resource
  type: docker-image
  source:
    repository: aequitas/http-resource
